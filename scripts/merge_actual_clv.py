#!/usr/bin/env python
"""
scripts/merge_actual_clv.py
────────────────────────────────────────────────────────────
Attach realised revenue (actual_clv) to the *plain* prediction CSV
generated by score_and_rank_customers.py BEFORE any ranking or clustering.

Expected file pattern
---------------------
outputs/clv_predictions_<YYYYMMDD>_pred<m>m.csv

The snapshot date defaults to run.last_score_cutoff in model_config.yaml
but can be overridden with --cutoff YYYY-MM-DD.
"""

from __future__ import annotations

import argparse
import logging
import sys
from pathlib import Path

import pandas as pd
import yaml
from dateutil.relativedelta import relativedelta

# ── repo paths ─────────────────────────────────────────────
ROOT     = Path(__file__).resolve().parents[1]
TX_PATH  = ROOT / "data" / "raw" / "transactions.csv"
OUT_DIR  = ROOT / "outputs"
CFG_YML  = ROOT / "config" / "model_config.yaml"

logging.basicConfig(level=logging.INFO,
                    format="%(asctime)s — %(levelname)s — %(message)s")
log = logging.getLogger(__name__)

# ── CLI ────────────────────────────────────────────────────
parser = argparse.ArgumentParser()
parser.add_argument("--cutoff",
                    help="Snapshot date YYYY-MM-DD; "
                         "defaults to run.last_score_cutoff in YAML")
args = parser.parse_args()

# ── resolve cutoff date ───────────────────────────────────
cfg  = yaml.safe_load(open(CFG_YML))
raw  = args.cutoff or cfg.get("run", {}).get("last_score_cutoff")
if not raw:
    log.error("No --cutoff flag and run.last_score_cutoff is empty in YAML.")
    sys.exit(1)

cutoff      = pd.Timestamp(raw)
pred_months = cfg["training"]["pred_months"]
window_end  = cutoff + relativedelta(months=pred_months)

log.info("Aggregating revenue between %s and %s",
         cutoff.date(), window_end.date())

# ── locate *plain* prediction file ────────────────────────
pred_name = f"clv_predictions_{cutoff:%Y%m%d}_pred{pred_months}m.csv"
pred_path = OUT_DIR / pred_name
if not pred_path.exists():
    log.error("Plain prediction file not found: %s", pred_path)
    log.error("Run score_and_rank_customers.py first.")
    sys.exit(1)

df_pred = pd.read_csv(pred_path)
log.info("Loaded predictions for %s customers", len(df_pred))

# ── load transactions & compute actual CLV ────────────────
df_tx = pd.read_csv(TX_PATH, parse_dates=["order_date"])
mask  = (df_tx["order_date"] >= cutoff) & (df_tx["order_date"] < window_end)

actuals = (df_tx.loc[mask]
                 .groupby("customer_id", as_index=False)["revenue"]
                 .sum()
                 .rename(columns={"revenue": "actual_clv"}))
log.info("Computed actual CLV for %s customers", len(actuals))

# ── merge & save ──────────────────────────────────────────
df_out = df_pred.merge(actuals, on="customer_id", how="left")
out_name = f"clv_predictions_actual_{cutoff:%Y%m%d}_pred{pred_months}m.csv"
out_path = OUT_DIR / out_name
df_out.to_csv(out_path, index=False)
log.info("Merged file written → %s", out_path)

